/*
 * To change this license header, choose License Headers in Project Properties.
 * To change this template file, choose Tools | Templates
 * and open the template in the editor.
 */
package view;

import controller.BoxProcessor;
import controller.DogProcessor;
import controller.DogSicknessProcessor;
import controller.EmployeeProcessor;
import controller.SicknessProcessor;
import controller.SpeciesProcessor;
import java.time.ZoneId;
import java.util.ArrayList;
import java.util.Date;
import java.util.List;

import javax.swing.DefaultComboBoxModel;
import javax.swing.DefaultListModel;
import javax.swing.JOptionPane;
import model.Dog;
import model.Employee;
import model.Box;
import model.DogSickness;
import model.Sickness;
import model.Species;
import util.MyException;

/**
 *
 * @author mbralic
 */
public class DogForm extends javax.swing.JFrame {
    
    private DogProcessor processor;
    private DogSicknessProcessor dsprocessor;
    private SicknessProcessor sprocessor;

    /**
     * Creates new form Dogs
     */
    public DogForm() {
        initComponents();
        setTitle(Application.TITLE_APP + " Dogs");
        processor = new DogProcessor();
        dsprocessor = new DogSicknessProcessor();
        sprocessor = new SicknessProcessor();
        loadSickness();
        loadData();        
        loadEmployee();
        loadBox();
        loadSpecies();
    }

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        JPanel2 = new javax.swing.JPanel();
        jLabel1 = new javax.swing.JLabel();
        lblName = new javax.swing.JLabel();
        txtName = new java.awt.TextField();
        lblChipNumber = new javax.swing.JLabel();
        textChipNumber = new java.awt.TextField();
        jLabel3 = new javax.swing.JLabel();
        jPanel1 = new javax.swing.JPanel();
        jScrollPane1 = new javax.swing.JScrollPane();
        lstDogs = new javax.swing.JList<>();
        lblEmployee = new javax.swing.JLabel();
        cmbEmployee = new javax.swing.JComboBox<>();
        lblBox = new javax.swing.JLabel();
        cmbBox = new javax.swing.JComboBox<>();
        lblSpecies = new javax.swing.JLabel();
        cmbSpecies = new javax.swing.JComboBox<>();
        btnAdd = new javax.swing.JButton();
        btnUpdate = new javax.swing.JButton();
        btnDelete = new javax.swing.JButton();
        lblMessage = new javax.swing.JLabel();
        jScrollPane2 = new javax.swing.JScrollPane();
        lstSickness = new javax.swing.JList<>();
        btnAddSickness = new javax.swing.JButton();
        btnDeleteSickness = new javax.swing.JButton();
        jScrollPane3 = new javax.swing.JScrollPane();
        lstDogSickness = new javax.swing.JList<>();
        dpDateOftreatment = new com.github.lgooddatepicker.components.DatePicker();
        btnAddDate = new javax.swing.JButton();
        jLabel2 = new javax.swing.JLabel();
        jLabel4 = new javax.swing.JLabel();
        btnAddMedicine = new javax.swing.JButton();
        txtMedicine = new java.awt.TextField();
        jButton1 = new javax.swing.JButton();
        ycYearofbirth = new com.toedter.calendar.JYearChooser();
        lblYearOfAdopt = new javax.swing.JLabel();
        ycYearofAdopt = new com.toedter.calendar.JYearChooser();
        jDateChooser1 = new com.toedter.calendar.JDateChooser();
        jLabel6 = new javax.swing.JLabel();
        chbAdopted = new javax.swing.JCheckBox();

        setDefaultCloseOperation(javax.swing.WindowConstants.DISPOSE_ON_CLOSE);

        JPanel2.setBackground(new java.awt.Color(137, 196, 244));

        jLabel1.setText("Control dogs");

        lblName.setText("Name");

        lblChipNumber.setText("Chip Number");

        jLabel3.setText("Year of Birth");

        lstDogs.addListSelectionListener(new javax.swing.event.ListSelectionListener() {
            public void valueChanged(javax.swing.event.ListSelectionEvent evt) {
                lstDogsValueChanged(evt);
            }
        });
        jScrollPane1.setViewportView(lstDogs);

        javax.swing.GroupLayout jPanel1Layout = new javax.swing.GroupLayout(jPanel1);
        jPanel1.setLayout(jPanel1Layout);
        jPanel1Layout.setHorizontalGroup(
            jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addComponent(jScrollPane1, javax.swing.GroupLayout.DEFAULT_SIZE, 278, Short.MAX_VALUE)
        );
        jPanel1Layout.setVerticalGroup(
            jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addComponent(jScrollPane1, javax.swing.GroupLayout.DEFAULT_SIZE, 386, Short.MAX_VALUE)
        );

        lblEmployee.setText("Employee");

        lblBox.setText("Box");

        lblSpecies.setText("Species");

        btnAdd.setText("Add");
        btnAdd.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnAddActionPerformed(evt);
            }
        });

        btnUpdate.setText("Update");
        btnUpdate.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnUpdateActionPerformed(evt);
            }
        });

        btnDelete.setText("Delete");
        btnDelete.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnDeleteActionPerformed(evt);
            }
        });

        jScrollPane2.setViewportView(lstSickness);

        btnAddSickness.setText("<<");
        btnAddSickness.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnAddSicknessActionPerformed(evt);
            }
        });

        btnDeleteSickness.setText(">>");
        btnDeleteSickness.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnDeleteSicknessActionPerformed(evt);
            }
        });

        jScrollPane3.setViewportView(lstDogSickness);

        btnAddDate.setText("Add Date");
        btnAddDate.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnAddDateActionPerformed(evt);
            }
        });

        jLabel2.setText("Date of treatment");

        jLabel4.setText("Medicine");

        btnAddMedicine.setText("Add Medicine");
        btnAddMedicine.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnAddMedicineActionPerformed(evt);
            }
        });

        jButton1.setText("Clean");
        jButton1.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jButton1ActionPerformed(evt);
            }
        });

        lblYearOfAdopt.setText("Year of Adopt");

        chbAdopted.setText("Adopted");
        chbAdopted.addChangeListener(new javax.swing.event.ChangeListener() {
            public void stateChanged(javax.swing.event.ChangeEvent evt) {
                chbAdoptedStateChanged(evt);
            }
        });

        javax.swing.GroupLayout JPanel2Layout = new javax.swing.GroupLayout(JPanel2);
        JPanel2.setLayout(JPanel2Layout);
        JPanel2Layout.setHorizontalGroup(
            JPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(JPanel2Layout.createSequentialGroup()
                .addGroup(JPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(JPanel2Layout.createSequentialGroup()
                        .addGap(24, 24, 24)
                        .addGroup(JPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addGroup(JPanel2Layout.createSequentialGroup()
                                .addGroup(JPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                                    .addComponent(lblEmployee, javax.swing.GroupLayout.PREFERRED_SIZE, 149, javax.swing.GroupLayout.PREFERRED_SIZE)
                                    .addGroup(JPanel2Layout.createSequentialGroup()
                                        .addGap(8, 8, 8)
                                        .addComponent(lblChipNumber, javax.swing.GroupLayout.PREFERRED_SIZE, 116, javax.swing.GroupLayout.PREFERRED_SIZE))
                                    .addGroup(JPanel2Layout.createSequentialGroup()
                                        .addGap(11, 11, 11)
                                        .addComponent(lblName, javax.swing.GroupLayout.PREFERRED_SIZE, 113, javax.swing.GroupLayout.PREFERRED_SIZE))
                                    .addGroup(JPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING, false)
                                        .addComponent(textChipNumber, javax.swing.GroupLayout.Alignment.LEADING, javax.swing.GroupLayout.DEFAULT_SIZE, 250, Short.MAX_VALUE)
                                        .addComponent(txtName, javax.swing.GroupLayout.Alignment.LEADING, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
                                    .addGroup(JPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING)
                                        .addGroup(javax.swing.GroupLayout.Alignment.LEADING, JPanel2Layout.createSequentialGroup()
                                            .addComponent(chbAdopted)
                                            .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                                            .addComponent(jLabel6, javax.swing.GroupLayout.PREFERRED_SIZE, 77, javax.swing.GroupLayout.PREFERRED_SIZE))
                                        .addGroup(JPanel2Layout.createSequentialGroup()
                                            .addComponent(lblYearOfAdopt)
                                            .addGap(62, 62, 62)
                                            .addComponent(ycYearofAdopt, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                                        .addComponent(cmbEmployee, javax.swing.GroupLayout.Alignment.LEADING, javax.swing.GroupLayout.PREFERRED_SIZE, 179, javax.swing.GroupLayout.PREFERRED_SIZE))
                                    .addGroup(JPanel2Layout.createSequentialGroup()
                                        .addComponent(jLabel3, javax.swing.GroupLayout.PREFERRED_SIZE, 110, javax.swing.GroupLayout.PREFERRED_SIZE)
                                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                                        .addComponent(ycYearofbirth, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)))
                                .addGap(51, 51, 51)
                                .addComponent(jPanel1, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                                .addComponent(lblMessage, javax.swing.GroupLayout.PREFERRED_SIZE, 256, javax.swing.GroupLayout.PREFERRED_SIZE))
                            .addComponent(jLabel1, javax.swing.GroupLayout.PREFERRED_SIZE, 447, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addGroup(JPanel2Layout.createSequentialGroup()
                                .addGap(11, 11, 11)
                                .addComponent(lblBox, javax.swing.GroupLayout.PREFERRED_SIZE, 149, javax.swing.GroupLayout.PREFERRED_SIZE)
                                .addGap(156, 156, 156)
                                .addComponent(btnAdd)
                                .addGap(18, 18, 18)
                                .addComponent(btnUpdate)
                                .addGap(36, 36, 36)
                                .addComponent(btnDelete))))
                    .addGroup(JPanel2Layout.createSequentialGroup()
                        .addGap(48, 48, 48)
                        .addComponent(lblSpecies, javax.swing.GroupLayout.PREFERRED_SIZE, 78, javax.swing.GroupLayout.PREFERRED_SIZE)))
                .addGroup(JPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(JPanel2Layout.createSequentialGroup()
                        .addGap(58, 58, 58)
                        .addComponent(jScrollPane3, javax.swing.GroupLayout.PREFERRED_SIZE, 247, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, 12, Short.MAX_VALUE)
                        .addGroup(JPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING)
                            .addComponent(btnDeleteSickness)
                            .addComponent(btnAddSickness))
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addComponent(jScrollPane2, javax.swing.GroupLayout.PREFERRED_SIZE, 259, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addGap(29, 29, 29))
                    .addGroup(JPanel2Layout.createSequentialGroup()
                        .addGap(49, 49, 49)
                        .addGroup(JPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addComponent(jLabel2)
                            .addGroup(JPanel2Layout.createSequentialGroup()
                                .addComponent(dpDateOftreatment, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                                .addGap(18, 18, 18)
                                .addComponent(btnAddDate)
                                .addGap(53, 53, 53)
                                .addComponent(jDateChooser1, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                            .addComponent(jLabel4)
                            .addComponent(txtMedicine, javax.swing.GroupLayout.PREFERRED_SIZE, 178, javax.swing.GroupLayout.PREFERRED_SIZE))
                        .addContainerGap(219, Short.MAX_VALUE))))
            .addGroup(JPanel2Layout.createSequentialGroup()
                .addContainerGap()
                .addGroup(JPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(JPanel2Layout.createSequentialGroup()
                        .addComponent(cmbBox, javax.swing.GroupLayout.PREFERRED_SIZE, 179, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                        .addComponent(btnAddMedicine)
                        .addGap(315, 315, 315))
                    .addGroup(JPanel2Layout.createSequentialGroup()
                        .addComponent(cmbSpecies, javax.swing.GroupLayout.PREFERRED_SIZE, 179, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))))
            .addGroup(JPanel2Layout.createSequentialGroup()
                .addGap(56, 56, 56)
                .addComponent(jButton1)
                .addGap(0, 0, Short.MAX_VALUE))
        );
        JPanel2Layout.setVerticalGroup(
            JPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(JPanel2Layout.createSequentialGroup()
                .addGroup(JPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(JPanel2Layout.createSequentialGroup()
                        .addContainerGap()
                        .addComponent(jLabel1, javax.swing.GroupLayout.PREFERRED_SIZE, 46, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addGap(65, 65, 65)
                        .addGroup(JPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, JPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                                .addGroup(JPanel2Layout.createSequentialGroup()
                                    .addGroup(JPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                                        .addGroup(JPanel2Layout.createSequentialGroup()
                                            .addComponent(lblName, javax.swing.GroupLayout.PREFERRED_SIZE, 23, javax.swing.GroupLayout.PREFERRED_SIZE)
                                            .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                                            .addComponent(txtName, javax.swing.GroupLayout.PREFERRED_SIZE, 27, javax.swing.GroupLayout.PREFERRED_SIZE)
                                            .addGap(28, 28, 28)
                                            .addComponent(lblChipNumber, javax.swing.GroupLayout.PREFERRED_SIZE, 23, javax.swing.GroupLayout.PREFERRED_SIZE)
                                            .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                                            .addComponent(textChipNumber, javax.swing.GroupLayout.PREFERRED_SIZE, 30, javax.swing.GroupLayout.PREFERRED_SIZE)
                                            .addGap(35, 35, 35)
                                            .addGroup(JPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                                                .addComponent(jLabel3, javax.swing.GroupLayout.PREFERRED_SIZE, 28, javax.swing.GroupLayout.PREFERRED_SIZE)
                                                .addComponent(ycYearofbirth, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                                            .addGap(29, 29, 29)
                                            .addComponent(chbAdopted)
                                            .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                                            .addComponent(jLabel6)
                                            .addGap(66, 66, 66)
                                            .addGroup(JPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                                                .addGroup(JPanel2Layout.createSequentialGroup()
                                                    .addComponent(lblYearOfAdopt)
                                                    .addGap(45, 45, 45)
                                                    .addComponent(lblEmployee))
                                                .addComponent(ycYearofAdopt, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)))
                                        .addGroup(JPanel2Layout.createSequentialGroup()
                                            .addGap(101, 101, 101)
                                            .addComponent(btnAddSickness)
                                            .addGap(47, 47, 47)
                                            .addComponent(btnDeleteSickness)))
                                    .addGroup(JPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                                        .addGroup(JPanel2Layout.createSequentialGroup()
                                            .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                                            .addComponent(cmbEmployee, javax.swing.GroupLayout.PREFERRED_SIZE, 31, javax.swing.GroupLayout.PREFERRED_SIZE))
                                        .addGroup(JPanel2Layout.createSequentialGroup()
                                            .addGap(2, 2, 2)
                                            .addComponent(lblMessage, javax.swing.GroupLayout.PREFERRED_SIZE, 31, javax.swing.GroupLayout.PREFERRED_SIZE))))
                                .addComponent(jPanel1, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, JPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                                .addComponent(jScrollPane2, javax.swing.GroupLayout.PREFERRED_SIZE, 375, javax.swing.GroupLayout.PREFERRED_SIZE)
                                .addComponent(jScrollPane3, javax.swing.GroupLayout.PREFERRED_SIZE, 375, javax.swing.GroupLayout.PREFERRED_SIZE)))
                        .addGroup(JPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addGroup(JPanel2Layout.createSequentialGroup()
                                .addGap(23, 23, 23)
                                .addGroup(JPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                                    .addComponent(lblBox)
                                    .addComponent(btnDelete)))
                            .addGroup(JPanel2Layout.createSequentialGroup()
                                .addGap(18, 18, 18)
                                .addComponent(jLabel2)
                                .addGap(14, 14, 14)
                                .addGroup(JPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                                    .addComponent(jDateChooser1, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                                    .addGroup(JPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                                        .addComponent(dpDateOftreatment, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                                        .addComponent(btnAddDate))))))
                    .addGroup(JPanel2Layout.createSequentialGroup()
                        .addGap(541, 541, 541)
                        .addGroup(JPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                            .addComponent(btnAdd)
                            .addComponent(btnUpdate))))
                .addGap(31, 31, 31)
                .addGroup(JPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(JPanel2Layout.createSequentialGroup()
                        .addComponent(cmbBox, javax.swing.GroupLayout.PREFERRED_SIZE, 31, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addGap(27, 27, 27)
                        .addComponent(lblSpecies))
                    .addGroup(JPanel2Layout.createSequentialGroup()
                        .addComponent(jLabel4)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                        .addGroup(JPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addComponent(btnAddMedicine)
                            .addComponent(txtMedicine, javax.swing.GroupLayout.PREFERRED_SIZE, 37, javax.swing.GroupLayout.PREFERRED_SIZE))))
                .addGap(18, 18, 18)
                .addComponent(cmbSpecies, javax.swing.GroupLayout.PREFERRED_SIZE, 31, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, 35, Short.MAX_VALUE)
                .addComponent(jButton1)
                .addGap(28, 28, 28))
        );

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(getContentPane());
        getContentPane().setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addContainerGap()
                .addComponent(JPanel2, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                .addContainerGap())
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addComponent(JPanel2, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(0, 0, Short.MAX_VALUE))
        );

        pack();
        setLocationRelativeTo(null);
    }// </editor-fold>//GEN-END:initComponents

    private void btnAddActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnAddActionPerformed
        processor.setEntity(new Dog());
        setValuetoEntity();
        

        try {
            processor.create();
            loadData();
            cleanUp();
            lblMessage.setText("Dog added successfully.");
        } catch (MyException ex) {
            JOptionPane.showMessageDialog(rootPane, ex.getMessage());
        }
    }//GEN-LAST:event_btnAddActionPerformed

    private void btnUpdateActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnUpdateActionPerformed
         if (processor.getEntity()==null || 
                processor.getEntity().getId() == null) {
           JOptionPane.showMessageDialog(rootPane, "Please first select item");
            return;
       }
        
        
        setValuetoEntity();

        try {
            processor.update();
            loadData();
            cleanUp();        
            lblMessage.setText("Dog is changed successfully.");
        } catch (MyException ex) {
            JOptionPane.showMessageDialog(rootPane, ex.getMessage());
            
        }    
    }//GEN-LAST:event_btnUpdateActionPerformed

    private void btnDeleteActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnDeleteActionPerformed
        if (processor.getEntity()==null || 
                processor.getEntity().getId() == null) {
           JOptionPane.showMessageDialog(rootPane, "Please first select item");
            return;
       }
        
        
        setValuetoEntity();

        try {
            processor.delete();
            loadData();
            cleanUp();        
            lblMessage.setText("Dog is successfully deleted.");
        } catch (MyException ex) {
            JOptionPane.showMessageDialog(rootPane, ex.getMessage());
            
        }
    }//GEN-LAST:event_btnDeleteActionPerformed

    private void lstDogsValueChanged(javax.swing.event.ListSelectionEvent evt) {//GEN-FIRST:event_lstDogsValueChanged
          if(evt.getValueIsAdjusting()) {
            
            return;
        }
        
        if(lstDogs.getSelectedValue() == null){
            
            return;
            
        }
        
        processor.setEntity(lstDogs.getSelectedValue());
        
        txtName.setText(processor.getEntity().getName());
        
        if (processor.getEntity().getChipNumber()!= null) {
            textChipNumber.setText(processor.getEntity().getChipNumber().toString());
        } else {
            textChipNumber.setText("");
        }
                 
         ycYearofbirth.setValue(processor.getEntity().getYearOfBirth());
         
        var v= processor.getEntity();
             
        if(v.getYearOfAdopt()!=null){
            chbAdopted.setSelected(true);
            lblYearOfAdopt.setVisible(true);
            ycYearofAdopt.setVisible(true);
        }else{
            chbAdopted.setSelected(false);
            lblYearOfAdopt.setVisible(false);
            ycYearofAdopt.setVisible(false);
        }
         
         if(processor.getEntity().getYearOfAdopt() != null) {
            ycYearofAdopt.setValue(processor.getEntity().getYearOfAdopt());
        }


        
       
        cmbEmployee.setSelectedItem(processor.getEntity().getEmployee());
        cmbBox.setSelectedItem(processor.getEntity().getBox());
        cmbSpecies.setSelectedItem(processor.getEntity().getSpecies());
    }//GEN-LAST:event_lstDogsValueChanged

    private void btnAddSicknessActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnAddSicknessActionPerformed
         
        DefaultListModel<DogSickness> ds;
        try {
          ds= (DefaultListModel<DogSickness>) lstDogSickness.getModel();
            ds.get(0).toString();
        } catch (Exception e) {
            ds= new DefaultListModel<>();
            lstDogSickness.setModel(ds);
        }
        boolean bo;
       for(Sickness s : lstSickness.getSelectedValuesList()){
           bo=false;
           for(int i=0;i<ds.size();i++){
               if(s.getId().equals(ds.get(i).getSickness().getId())){
                   bo=true;
                   break;
               }
           }
           if(!bo){
               DogSickness dogSickness = new DogSickness();
               dogSickness.setDog(lstDogs.getSelectedValue());
               dogSickness.setSickness(s);
               dogSickness.setDateoftreatment(new Date()); 
               dogSickness.setMedicine(txtMedicine.getText());
               ds.addElement(dogSickness);
           }
       }
        
        lstDogSickness.repaint();
    }//GEN-LAST:event_btnAddSicknessActionPerformed

    private void btnDeleteSicknessActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnDeleteSicknessActionPerformed
 
        
        DefaultListModel<DogSickness> ds;
        try {
            ds=(DefaultListModel<DogSickness>) lstDogSickness.getModel();
            ds.get(0).toString();
        } catch (Exception e) {
           return;
        }
        
        for(DogSickness d : lstDogSickness.getSelectedValuesList()){
          
           for(int i=0;i<ds.size();i++){
               if(d.getId().equals(ds.get(i).getId())){
                   ds.removeElementAt(i);
                   break;
               }
           }
          
       }    }//GEN-LAST:event_btnDeleteSicknessActionPerformed

    private void btnAddDateActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnAddDateActionPerformed
                                                     
        if (lstDogSickness.getSelectedValue() == null) {
            return;
        }
         DogSickness ds = lstDogSickness.getSelectedValue();
         
          if(dpDateOftreatment.getDate()!=null){
           ds.setDateoftreatment(
                   Date.from(dpDateOftreatment.getDate()
                           .atStartOfDay()
                   .atZone(ZoneId.systemDefault()).toInstant())
           );
       }
          
          try {
              dsprocessor.setEntity(ds);
            dsprocessor.update();
        } catch (MyException e) {
              System.out.println(e.getMessage());
        }
    }//GEN-LAST:event_btnAddDateActionPerformed

    private void btnAddMedicineActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnAddMedicineActionPerformed
     
    }//GEN-LAST:event_btnAddMedicineActionPerformed

    private void jButton1ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jButton1ActionPerformed
        cleanUp();
    }//GEN-LAST:event_jButton1ActionPerformed

    private void chbAdoptedStateChanged(javax.swing.event.ChangeEvent evt) {
        if(chbAdopted.isSelected()) {
            lblYearOfAdopt.setVisible(true);
            ycYearofAdopt.setVisible(true);
        }
        else {
            lblYearOfAdopt.setVisible(false);
            ycYearofAdopt.setVisible(false);
        }
//GEN-FIRST:event_chbAdoptedStateChanged
    }//GEN-LAST:event_chbAdoptedStateChanged

    /**
     * @param args the command line arguments
     */
   

    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JPanel JPanel2;
    private javax.swing.JButton btnAdd;
    private javax.swing.JButton btnAddDate;
    private javax.swing.JButton btnAddMedicine;
    private javax.swing.JButton btnAddSickness;
    private javax.swing.JButton btnDelete;
    private javax.swing.JButton btnDeleteSickness;
    private javax.swing.JButton btnUpdate;
    private javax.swing.JCheckBox chbAdopted;
    private javax.swing.JComboBox<Box> cmbBox;
    private javax.swing.JComboBox<Employee> cmbEmployee;
    private javax.swing.JComboBox<Species> cmbSpecies;
    private com.github.lgooddatepicker.components.DatePicker dpDateOftreatment;
    private javax.swing.JButton jButton1;
    private com.toedter.calendar.JDateChooser jDateChooser1;
    private javax.swing.JLabel jLabel1;
    private javax.swing.JLabel jLabel2;
    private javax.swing.JLabel jLabel3;
    private javax.swing.JLabel jLabel4;
    private javax.swing.JLabel jLabel6;
    private javax.swing.JPanel jPanel1;
    private javax.swing.JScrollPane jScrollPane1;
    private javax.swing.JScrollPane jScrollPane2;
    private javax.swing.JScrollPane jScrollPane3;
    private javax.swing.JLabel lblBox;
    private javax.swing.JLabel lblChipNumber;
    private javax.swing.JLabel lblEmployee;
    private javax.swing.JLabel lblMessage;
    private javax.swing.JLabel lblName;
    private javax.swing.JLabel lblSpecies;
    private javax.swing.JLabel lblYearOfAdopt;
    private javax.swing.JList<DogSickness> lstDogSickness;
    private javax.swing.JList<Dog> lstDogs;
    private javax.swing.JList<Sickness> lstSickness;
    private java.awt.TextField textChipNumber;
    private java.awt.TextField txtMedicine;
    private java.awt.TextField txtName;
    private com.toedter.calendar.JYearChooser ycYearofAdopt;
    private com.toedter.calendar.JYearChooser ycYearofbirth;
    // End of variables declaration//GEN-END:variables

    private void loadData() {
        
         DefaultListModel<Dog> d = new DefaultListModel<>();
        
             
       processor.getData().forEach(g -> {
           d.addElement(g);
       });
       

        lstDogs.setModel(d);
       
    }

    private void loadEmployee() {
        
        DefaultComboBoxModel<Employee> e =
               new DefaultComboBoxModel<>();
       
       
       
       Employee em = new Employee();
       em.setId(-1L);
       em.setFirstName("Choose");
       em.setLastName(" employee");
       e.addElement(em);
       e.addAll(new EmployeeProcessor().getData());
       
       
       cmbEmployee.setModel(e);     
       cmbEmployee.setSelectedIndex(0);
   
    }

    private void loadBox() {
         DefaultComboBoxModel<Box> b =
               new DefaultComboBoxModel<>();
       
       
       
       Box bo = new Box();
       bo.setId(-1L);
       bo.setName("Choose box");
       b.addElement(bo);
       b.addAll(new BoxProcessor().getData());
       
       
       cmbBox.setModel(b);     
       cmbBox.setSelectedIndex(0);
    }

    private void loadSpecies() {
        DefaultComboBoxModel<Species> s =
               new DefaultComboBoxModel<>();
       
       
       
       Species species = new Species();
       species.setId(-1L);
       species.setName("Choose specie");
       s.addElement(species);
       s.addAll(new SpeciesProcessor().getData());
       
       
       cmbSpecies.setModel(s);     
       cmbSpecies.setSelectedIndex(0);
    }
    
    
    private void loadSickness() {
        
        DefaultListModel<Sickness> s =
               new  DefaultListModel<>();
       
        
             
       sprocessor.getData().forEach(g -> {
           s.addElement(g);
       });
       

       
       
       
       lstSickness.setModel(s);
       
       
    }
    
    private void setValuetoEntity(){
       
       
       var entity =processor.getEntity();      
       
            
       entity.setName(txtName.getText());
       
       
        try {
            entity.setChipNumber(Long.parseLong(textChipNumber.getText()));
        } catch (Exception e) {
            entity.setChipNumber(0L);
        }
        
        entity.setYearOfBirth(ycYearofbirth.getYear());

       
        if(chbAdopted.isSelected()) {
           entity.setYearOfAdopt(ycYearofAdopt.getYear());
       }
       else {
           entity.setYearOfAdopt(null);
       }

        
        entity.setEmployee((Employee) cmbEmployee.getSelectedItem());
        entity.setBox((Box) cmbBox.getSelectedItem());
        entity.setSpecies((Species) cmbSpecies.getSelectedItem());
        

        
        
         DefaultListModel<DogSickness> ds;
        try {
            ds=(DefaultListModel<DogSickness>) lstDogSickness.getModel();
            entity.setSicknesses(new ArrayList<>());
            for(int i=0;i<ds.getSize();i++){
                entity.getSicknesses().add(ds.get(i));
            }
        } catch (Exception e) {
           
        }
        
            
       
   }
    
    
    private void cleanUp(){
       
       txtName.setText("");
       textChipNumber.setText("");      
       cmbEmployee.setSelectedItem(false);
       cmbBox.setSelectedItem(false);
       cmbSpecies.setSelectedItem(false);
       txtMedicine.setText("");
       chbAdopted.setSelected(false);
      
       
      
   
   
   }
}
